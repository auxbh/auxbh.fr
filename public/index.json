
[{"content":" ðŸ‘‹ â€¢ Hey, I'm Arthur! I'm a self-taught developer from France who enjoys Roblox, Fortnite and rhythm games.\nI have experience in Luau, and I know a few other programming languages.\nI'm currently using Hugo for my website as you can see on my blog post, but I'll probably move on to something else once I find the right tool, as I don't really plan on using the blog aspect. ","date":"1 February 2025","externalUrl":null,"permalink":"/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"1 February 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"1 February 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"I was tired of my old website with broken CSS and I wasn\u0026rsquo;t working on it. But I discovered this fabulous tool called Hugo, which is an amazing program that transforms regular markdown files into websites using templates! I went with the Blowfish one as it is pretty and well documented.\nThe source code is available on Github, and the final website is in the \u0026ldquo;deploy\u0026rdquo; branch. auxbh/auxbh.fr HTML 0 0 I was inspired by NetworkChuck\u0026rsquo;s video. Below is a modified version of his Mega Script without the Python part. It asks if you would like to input a custom commit message and is modified to my needs.\n#!/bin/bash set -euo pipefail # Change to the script\u0026#39;s directory cd \u0026#34;/path/to/hugosite\u0026#34; # Step 1: Build the Hugo site echo \u0026#34;Building the Hugo site...\u0026#34; if ! hugo; then echo \u0026#34;Hugo build failed.\u0026#34; exit 1 fi # Step 2: Add changes to Git echo \u0026#34;Staging changes for Git...\u0026#34; if git diff --quiet \u0026amp;\u0026amp; git diff --cached --quiet; then echo \u0026#34;No changes to stage.\u0026#34; else git add . fi # Step 3: Ask for a custom commit message echo \u0026#34;Enter a custom commit message (or press Enter to use the default message):\u0026#34; read -r user_commit_message # Set the commit message if [[ -z \u0026#34;$user_commit_message\u0026#34; ]]; then commit_message=\u0026#34;New Blog Post on $(date +\u0026#39;%Y-%m-%d\u0026#39;)\u0026#34; else commit_message=\u0026#34;$user_commit_message\u0026#34; fi # Step 4: Commit changes with a dynamic message if git diff --cached --quiet; then echo \u0026#34;No changes to commit.\u0026#34; else echo \u0026#34;Committing changes...\u0026#34; git commit -m \u0026#34;$commit_message\u0026#34; fi # Step 5: Push all changes to the main branch echo \u0026#34;Deploying to GitHub Main...\u0026#34; if ! git push origin main; then echo \u0026#34;Failed to push to main branch.\u0026#34; exit 1 fi # Step 6: Push the public folder to the Deploy branch using subtree split and force push echo \u0026#34;Deploying to Temp Deploy...\u0026#34; if git branch --list | grep -q \u0026#39;temp-deploy\u0026#39;; then git branch -D temp-deploy fi if ! git subtree split --prefix public -b temp-deploy; then echo \u0026#34;Subtree split failed.\u0026#34; exit 1 fi if ! git push origin temp-deploy:deploy --force; then echo \u0026#34;Failed to push to deploy branch.\u0026#34; git branch -D temp-deploy exit 1 fi git branch -D temp-deploy echo \u0026#34;All done! Site synced, processed, committed, built, and deployed.\u0026#34; Then, a webhook request is sent from Github to my VPS, making it pull the latest code from the Deploy branch. This is made using webhook, and a tutorial is available here.\n","date":"1 February 2025","externalUrl":null,"permalink":"/posts/first-post/","section":"Posts","summary":"","title":"Upgraded my website to Hugo!","type":"posts"},{"content":"","date":"1 February 2025","externalUrl":null,"permalink":"/tags/website/","section":"Tags","summary":"","title":"Website","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]